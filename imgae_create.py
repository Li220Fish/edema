import pygame as pg
import numpy as np
import math
from datetime import datetime as dt
from scipy.ndimage import gaussian_filter1d
from scipy.interpolate import interp1d , CubicSpline
import time
'''
#IR_list = [14.8, 14.7, 14.2, 14.0, 14.4, 14.2, 14.2, 14.3, 13.9, 14.0, 13.7, 13.2, 13.6, 13.3, 13.3, 12.9, 13.4, 13.5, 13.1, 13.6, 13.1, 13.0, 12.9, 13.2, 13.3, 13.1, 13.2, 13.1, 13.7, 13.8, 14.0, 13.5, 14.0, 14.0, 14.1, 14.1, 14.3, 14.3, 14.4, 14.3, 14.6, 15.0, 14.8, 15.1, 15.0, 15.0, 15.1, 15.4, 15.6, 15.6, 15.7, 16.0, 15.7, 15.6, 15.9, 15.9, 16.0, 16.1, 16.3, 15.8, 15.9, 16.0, 15.8, 16.3, 16.2, 16.2, 16.1, 16.3, 16.3, 16.0, 16.3, 16.3, 16.2, 15.7, 15.7, 16.0, 16.1, 16.0, 16.1, 15.7, 15.7, 15.4, 15.7, 15.8, 15.4, 15.4, 15.6, 15.3, 14.9, 15.0, 15.0, 14.8, 14.6, 14.4]
#IR_list = [14.6, 14.3, 14.0, 14.2, 14.4, 14.4, 14.2, 14.2, 14.4, 14.3, 14.3, 14.0, 13.8, 13.4, 13.4, 13.2, 13.4, 13.0, 13.2, 13.0, 12.9, 12.8, 12.8, 12.9, 12.8, 12.6, 12.5, 12.5, 12.5, 12.6, 12.5, 12.5, 13.3, 13.4, 13.3, 13.5, 13.5, 13.7, 13.9, 13.8, 14.0, 14.2, 14.2, 14.4, 14.6, 14.5, 14.7, 14.7, 14.9, 15.2, 15.1, 15.6, 15.4, 15.3, 15.1, 15.0, 15.4, 15.5, 15.5, 15.5, 15.0, 15.0, 15.2, 15.4, 15.0, 15.0]
#IR_list = [15.1, 15.0, 14.9, 14.7, 14.7, 14.8, 14.7, 14.4, 14.0, 14.1, 13.7, 13.6, 13.7, 13.6, 13.5, 13.4, 13.5, 13.3, 13.3, 13.5, 13.4, 13.2, 13.0, 13.1, 12.7, 13.0, 12.7, 12.9, 12.9, 12.8, 13.1, 12.9, 13.5, 13.3, 13.6, 13.5, 14.2, 14.4, 14.3, 14.4, 14.9, 14.8, 15.5, 15.4, 15.6, 15.2, 15.5, 15.5, 15.2, 15.8, 15.7, 15.5, 15.6, 15.1, 15.4, 15.3, 15.4, 15.2]
IR_list = [14.7, 14.4, 14.3, 14.3, 14.4, 14.8, 14.2, 14.2, 14.4, 14.3, 14.7, 13.9, 14.1, 14.5, 14.1, 14.0, 14.3, 13.6, 13.8, 14.3, 13.8, 13.8, 13.2, 13.1, 12.9, 13.4, 13.4, 13.0, 13.1, 13.2, 12.6, 12.1, 12.5, 12.6, 12.5, 12.9, 12.7, 12.9, 12.8, 12.9, 12.2, 11.9, 11.8, 12.1, 12.6, 12.0, 12.3, 11.6, 12.1, 10.6, 11.3, 11.5, 11.6, 11.4, 11.0, 11.9, 12.2, 11.6, 11.5, 11.2, 11.7, 11.8, 11.4, 11.9, 11.9, 12.0, 11.4, 11.7, 11.5, 12.0, 11.8, 11.8, 11.2, 11.0, 12.0, 12.5, 12.4, 12.8, 12.8, 12.8, 12.7, 12.9, 13.5, 13.6, 13.7, 13.7, 13.8, 13.7, 13.9, 13.9, 13.8, 13.7, 13.9, 13.8, 14.4, 13.8, 14.4, 14.4, 14.6, 14.3, 14.7, 14.7, 14.8, 14.9, 14.2, 14.5, 14.8, 14.7, 15.1, 14.6, 14.4, 14.6, 14.7, 14.6, 14.2, 14.6]
#iron jar
IR_list = [15.3, 15.7, 15.4, 15.5, 15.6, 15.4, 15.1, 15.4, 15.3, 15.1, 15.0, 15.0, 15.1, 14.9, 14.9, 15.3, 15.3, 15.2, 15.2, 15.2, 15.0, 14.8, 14.7, 14.4, 14.3, 14.3, 14.2, 14.2, 14.4, 13.9, 13.9, 13.5, 13.8, 13.5, 13.8, 13.6, 13.4, 13.0, 13.4, 13.5, 13.5, 13.5, 13.3, 13.1, 12.9, 12.9, 12.9, 12.5, 12.5, 11.8, 12.1, 11.9, 11.6, 11.3, 10.6, 11.0, 10.7, 10.9, 11.2, 11.1, 11.0, 10.3, 10.6, 10.8, 10.2, 11.1, 9.9, 10.3, 10.0, 10.1, 10.0, 8.6, 9.9, 8.6, 8.9, 9.7, 9.0, 9.5, 9.1, 9.8, 9.9, 10.2, 9.7, 9.5, 9.3, 9.5, 10.1, 9.6, 9.9, 9.9, 9.4, 9.8, 10.0, 10.2, 9.7, 10.0, 9.9, 9.4, 9.6, 10.1, 10.1, 10.3, 10.3, 10.5, 10.5, 10.6, 10.7, 10.9, 10.7, 11.0, 11.4, 11.2, 11.8, 11.5, 11.4, 11.7, 11.7, 11.4, 11.9, 12.1, 11.8, 12.0, 12.6, 12.6, 12.5, 12.4, 12.7, 12.9, 12.8, 12.9, 13.0, 13.3, 13.5, 13.6, 13.6, 13.8, 14.0, 14.1, 13.9, 14.4, 14.2, 14.2, 14.3, 14.2, 14.4, 14.6, 14.9, 14.8, 14.9, 15.0, 15.2, 15.2, 15.3, 15.4, 15.6, 15.6, 15.6, 16.0, 16.3, 16.2, 16.4, 16.4, 16.4, 16.6, 16.8, 16.6, 16.5, 16.5, 16.5, 16.5, 16.9, 17.1, 16.7, 17.2, 16.9, 16.9, 16.9, 17.0, 16.8, 17.2, 17.1, 17.1, 17.3, 16.9, 17.3, 17.7, 17.7, 17.7, 18.0, 17.9, 18.1, 17.7, 18.0, 17.8, 17.7, 17.8, 17.4, 17.3, 17.6, 16.9, 16.7, 16.8, 16.4, 16.5, 16.2, 16.5, 16.6, 17.0, 17.3, 17.6, 17.7, 17.4, 17.7, 17.4, 17.3, 17.0, 16.9, 16.7, 16.4, 16.7, 16.5, 16.6, 16.4, 16.6, 16.5, 16.8, 16.6, 16.7, 16.2, 16.4, 16.1, 16.4, 16.2, 17.0, 16.9, 17.0, 17.5, 16.2, 17.1, 16.8]
IR_list = [13.2, 13.0, 13.1, 13.5, 13.1, 12.8, 13.0, 12.8, 13.0, 12.8, 13.3, 12.9, 12.7, 13.1, 13.0, 13.4, 12.9, 13.3, 13.5, 13.5, 13.0, 12.6, 13.2, 12.8, 12.8, 13.1, 13.0, 13.1, 13.0, 13.4, 12.5, 12.9, 12.8, 12.4, 12.8, 13.1, 12.9, 13.4, 13.4, 13.5, 13.2, 13.2, 13.5, 13.5, 13.1, 13.3, 12.7, 13.2, 13.1, 12.6, 12.9, 13.2, 12.9, 12.9, 12.6, 13.3, 12.7, 13.1, 13.1, 13.0, 13.9, 13.0, 13.1, 13.4, 12.8, 13.4, 13.4, 13.6, 13.1, 12.9, 13.0, 13.0, 13.4, 13.7, 13.4, 13.5, 12.4, 13.8, 13.0, 13.6, 13.0, 13.7, 12.2, 13.5, 13.3, 12.9, 13.9, 13.7, 13.7, 13.7, 13.5, 13.4, 13.3, 13.6, 13.4, 13.2, 13.3, 13.8, 12.9, 13.5, 12.7, 14.1, 13.2, 12.9, 13.4, 13.1, 13.1, 13.9, 13.8, 14.1, 14.5, 13.3, 14.1, 14.0, 13.7, 13.8, 13.8, 13.6, 13.9, 13.0, 13.6, 13.5, 13.3, 13.2, 13.6, 13.7, 13.9, 13.3, 13.6, 14.0, 13.8, 13.3, 14.0, 13.7, 13.8, 14.1, 13.5, 13.9, 13.6, 13.7, 13.1, 13.7, 13.5, 13.5, 13.3, 13.8, 13.7, 13.6, 13.8, 13.2, 13.4, 13.1, 13.5, 13.5, 13.5, 13.6, 13.7, 13.6, 13.7, 14.1, 13.6, 13.1, 13.1, 13.2, 13.1, 13.2, 13.1, 13.2, 14.0, 13.7, 13.6, 13.2, 13.1, 13.6, 13.3, 13.4, 13.6, 13.5, 13.5, 13.6, 13.9, 13.8, 13.9, 13.7, 13.8, 13.8, 13.5, 13.3, 13.7, 13.1, 13.3, 13.0, 13.5, 13.7, 13.8, 13.5, 13.5, 13.4, 13.4, 13.5, 13.2, 13.0, 13.3, 13.8, 13.3, 13.8, 13.0, 13.6, 13.2, 13.5, 13.4, 13.3, 13.3, 13.5, 13.1, 13.5, 12.9, 13.3, 13.4, 13.2, 13.2, 13.6, 13.5, 13.6, 13.7, 13.6, 14.0, 13.7, 13.9, 13.9, 13.8, 13.6, 13.4, 13.7, 13.0, 12.5, 11.9, 11.5, 12.0, 11.9]
IR_list = [12.9, 12.3, 13.1, 12.3, 12.3, 12.5, 12.4, 11.9, 12.2, 11.7, 11.9, 11.9, 11.5, 12.3, 12.2, 12.9, 12.5, 12.7, 12.6, 11.9, 12.2, 12.1, 12.8, 12.6, 12.5, 12.5, 12.5, 12.3, 12.0, 12.3, 12.5, 12.5, 12.6, 12.2, 12.6, 12.7, 12.3, 12.6, 12.2, 12.2, 12.6, 12.6, 12.9, 12.4, 12.8, 13.2, 12.9, 13.2, 12.4, 13.1, 12.9, 12.2, 12.9, 12.6, 12.7, 12.9, 12.8, 12.5, 12.9, 13.2, 12.5, 13.7, 13.3, 13.4, 12.8, 13.5, 12.6, 12.7, 12.7, 13.4, 13.0, 13.1, 13.5, 13.5, 13.3, 13.4, 13.2, 14.2, 13.6, 12.8, 13.1, 13.5, 13.7, 13.7, 12.4, 13.1, 13.5, 12.8, 13.6, 12.8, 13.5, 13.5, 13.8, 13.0, 13.7, 13.5, 14.1, 13.7, 12.9, 13.2, 12.7, 13.8, 13.3, 14.0, 13.7, 13.6, 13.8, 13.5, 13.4, 13.4, 13.6, 13.6, 14.0, 14.0, 14.0, 14.3, 13.4, 13.3, 13.7, 13.8, 13.8, 14.5, 14.4, 14.3, 14.0, 14.3, 13.8, 13.5, 13.5, 13.9, 13.7, 13.9, 13.4, 13.7, 14.1, 13.9, 14.0, 13.8, 13.5, 14.2, 13.9, 14.0, 13.4, 14.0, 14.1, 13.9, 13.9, 14.2, 13.8, 13.8, 13.5, 13.9, 13.9, 13.4, 13.9, 13.9, 13.7, 13.6, 13.2, 13.7, 13.6, 13.2, 13.1, 13.7, 13.3, 13.7, 13.7, 14.0, 13.3, 13.8, 13.5, 14.0, 13.2, 13.7, 13.0, 13.0, 13.9, 13.5, 13.3, 13.7, 13.2, 13.5, 13.8, 13.2, 14.0, 13.5, 13.5, 12.9, 13.1, 13.3, 13.6, 13.6, 13.3, 13.6, 13.3, 13.2, 13.3, 13.0, 13.4, 13.1, 13.1, 13.6, 12.7, 13.1, 13.4, 13.4, 13.2, 13.4, 12.9, 13.3, 13.0, 13.1, 13.2, 12.8, 13.3, 12.8, 13.4, 13.3, 12.4, 12.5, 11.9, 11.2, 11.4, 11.1, 12.0, 12.2, 12.4, 13.1, 13.2, 12.1, 12.7, 12.7, 13.0, 12.3, 12.8, 13.0, 12.7, 12.3, 12.0, 12.7]
IR_list = [12.9, 12.7, 13.1, 11.9, 12.0, 12.5, 12.5, 12.5, 12.5, 12.2, 12.4, 12.2, 12.3, 12.3, 12.0, 12.4, 12.1, 12.1, 12.4, 12.0, 12.1, 12.4, 12.5, 12.2, 12.6, 12.1, 12.1, 12.8, 12.1, 12.2, 12.3, 12.5, 12.4, 12.3, 12.1, 12.2, 12.3, 12.1, 12.4, 12.2, 12.2, 12.1, 12.4, 12.0, 12.7, 12.3, 12.2, 13.1, 13.1, 12.8, 12.8, 12.6, 12.6, 12.5, 12.5, 11.8, 12.3, 12.3, 12.0, 12.4, 12.6, 12.5, 12.7, 12.7, 13.2, 12.5, 13.2, 12.4, 13.4, 12.6, 12.9, 12.7, 12.7, 12.7, 13.0, 13.2, 12.8, 13.1, 13.4, 13.1, 13.0, 13.2, 13.3, 12.9, 12.8, 12.7, 13.4, 13.2, 12.9, 13.6, 13.7, 12.5, 12.6, 13.5, 13.1, 13.2, 13.3, 12.6, 13.1, 12.7, 12.9, 12.6, 12.7, 12.8, 12.8, 12.6, 12.8, 13.1, 12.9, 13.2, 13.4, 13.2, 13.0, 13.9, 12.9, 13.5, 13.4, 13.3, 13.3, 12.6, 13.0, 13.1, 12.5, 13.0, 13.3, 12.7, 12.9, 12.8, 13.1, 13.3, 13.1, 13.5, 13.8, 12.1, 13.7, 12.9, 13.7, 12.7, 13.4, 13.3, 13.4, 12.7, 13.3, 13.1, 13.3, 12.9, 13.5, 13.2, 13.2, 13.1, 12.6, 13.0, 13.3, 12.6, 13.8, 13.6, 13.8, 13.6, 13.5, 13.0, 13.3, 13.5, 12.8, 13.0, 12.8, 13.3, 12.7, 12.9, 12.8, 13.0, 12.7, 12.8, 12.9, 12.4, 13.2, 12.6, 13.4, 12.7, 13.4, 13.1, 13.0, 13.6, 13.0, 12.4, 12.9, 12.6, 12.6, 12.8, 13.1, 12.9, 13.4, 12.7, 12.8, 12.9, 12.7, 12.5, 13.2, 13.1, 12.9, 12.8, 13.1, 12.7, 12.8, 12.4, 12.8, 12.9, 12.6, 12.4, 12.9, 13.4, 13.0, 13.3, 13.3, 13.0, 12.5, 13.1, 13.0, 12.7, 12.6, 12.4, 12.6, 13.1, 13.1, 12.8, 12.9, 12.6, 13.0, 12.7, 12.9, 13.1, 12.2, 12.7, 13.0, 12.6, 12.6, 12.6, 12.6, 12.7, 13.1, 12.8]
IR_list = [13.3, 12.5, 12.0, 12.6, 12.3, 12.5, 12.4, 12.3, 12.5, 12.1, 12.0, 12.0, 12.5, 12.2, 12.6, 12.5, 11.7, 11.7, 11.8, 12.2, 11.8, 12.6, 12.6, 12.1, 12.3, 12.4, 12.5, 12.2, 12.5, 12.4, 11.9, 12.2, 12.0, 12.3, 12.3, 11.9, 11.9, 12.5, 12.1, 12.4, 11.5, 12.6, 12.7, 12.1, 12.5, 12.5, 12.2, 11.9, 12.6, 12.5, 12.6, 12.2, 12.7, 12.5, 12.5, 12.5, 12.6, 12.6, 12.5, 12.9, 12.3, 12.9, 12.9, 12.3, 12.8, 12.0, 12.4, 12.4, 12.8, 12.9, 12.5, 12.6, 12.4, 13.0, 12.5, 12.6, 13.3, 12.7, 12.6, 13.0, 12.5, 12.6, 12.8, 13.0, 13.3, 13.2, 12.6, 13.0, 12.4, 12.7, 13.1, 13.2, 12.5, 12.9, 12.0, 13.4, 13.3, 12.9, 12.2, 12.9, 12.9, 13.2, 12.8, 13.3, 13.4, 12.8, 12.9, 12.6, 13.7, 12.5, 13.7, 13.3, 12.1, 12.9, 13.0, 12.5, 13.7, 13.2, 13.1, 13.0, 13.2, 13.6, 13.6, 13.4, 13.1, 13.4, 13.6, 13.4, 13.6, 13.8, 12.7, 12.5, 12.9, 13.2, 13.4, 12.9, 13.3, 13.0, 13.5, 12.9, 13.1, 13.1, 13.1, 13.1, 13.2, 12.9, 13.5, 13.1, 13.3, 13.4, 13.2, 13.1, 13.4, 13.8, 13.4, 13.3, 13.4, 13.2, 12.9, 12.9, 12.6, 13.2, 12.6, 13.3, 13.3, 12.3, 12.8, 13.2, 12.9, 12.9, 13.1, 13.2, 12.8, 13.0, 13.0, 13.2, 12.8, 12.9, 13.0, 12.6, 13.5, 12.3, 12.7, 13.2, 12.1, 12.3, 12.9, 13.3, 12.9, 12.7, 13.0, 13.1, 12.9, 12.5, 12.8, 13.1, 12.8, 13.1, 12.6, 12.7, 13.1, 12.9, 12.8, 12.9, 13.3, 12.7, 12.9, 12.9, 12.8, 12.7, 13.3, 13.0, 12.1, 12.9, 12.0, 12.2, 12.3, 12.6, 12.6, 12.8, 13.0, 13.1, 12.7, 12.7, 12.4, 12.7, 12.0, 12.0, 11.0, 10.3, 10.6, 11.2, 11.9, 12.7, 12.2, 12.5, 12.1, 12.4, 11.4, 12.0]
IR_list = [13.6, 13.4, 13.3, 13.2, 13.4, 12.9, 13.1, 13.4, 13.2, 13.0, 13.1, 13.3, 13.4, 13.3, 13.3, 13.4, 13.7, 13.9, 13.8, 13.4, 13.9, 13.6, 13.6, 13.9, 13.8, 13.5, 13.7, 13.2, 13.4, 13.1, 13.3, 13.2, 13.5, 13.4, 13.7, 13.2, 13.4, 13.7, 13.1, 13.5, 13.7, 13.5, 14.0, 13.6, 14.1, 13.8, 13.7, 13.6, 14.1, 14.1, 13.7, 13.8, 13.5, 13.9, 13.7, 13.3, 13.3, 13.7, 13.4, 13.9, 13.5, 13.5, 13.6, 14.3, 13.7, 14.2, 14.0, 14.0, 13.6, 13.9, 13.9, 13.6, 13.5, 13.8, 13.5, 13.5, 13.8, 13.1, 13.5, 13.3, 13.3, 12.9, 12.9, 13.2, 13.3, 12.5, 11.5, 11.9, 12.3, 13.0, 13.0, 13.3, 13.8, 13.1, 13.4, 13.4, 12.9, 13.1, 13.2, 13.5, 12.9, 12.9, 13.1, 13.3, 12.9, 12.9, 12.9, 12.7, 12.6, 12.7, 13.5, 14.0, 13.7, 13.5, 13.4, 13.9, 13.6, 13.6, 14.3, 13.0, 13.5, 12.9, 13.8, 13.2, 12.8, 12.7, 13.1, 12.6, 12.7, 13.5, 13.3, 12.5, 12.8, 12.7, 13.8, 13.1, 13.2, 13.5, 12.9, 13.6, 13.0, 12.5, 12.8, 12.8, 13.0, 12.8, 12.6, 12.9, 12.7, 12.7, 12.0, 12.2, 12.5, 12.1, 11.9, 12.4, 12.2, 13.0, 12.6, 12.2, 13.3, 12.6, 12.5, 13.2, 12.6, 13.0, 12.5, 13.1, 12.3, 12.7, 12.4, 12.3, 12.7, 12.7, 12.2, 12.5, 12.2, 12.0, 12.8, 12.5, 12.2, 12.3, 12.4, 12.6, 12.3, 12.6, 13.2, 12.3, 12.2, 12.6, 12.5, 12.2, 12.0, 13.1, 12.9, 12.9, 12.2, 11.7, 12.7, 12.4, 12.6, 12.2, 12.6, 12.3, 12.5, 13.0, 12.6, 12.6, 12.9, 12.4, 12.4, 12.7, 13.3, 12.3, 11.9, 12.7, 12.8, 12.2, 12.7, 12.7, 12.4, 12.4, 12.8, 12.3, 12.8, 12.3, 13.3, 13.0, 13.2, 12.0, 11.8, 12.5, 12.6, 12.6, 12.3, 13.1, 12.6, 12.5, 12.9, 12.6, 12.3, 12.9, 12.7, 13.3, 12.2, 12.9, 12.5, 12.8, 12.9, 13.0, 13.7, 13.2, 12.6, 13.0, 12.4, 12.6, 12.9, 12.3, 13.2, 13.3, 13.1, 12.6, 12.9, 13.0, 13.0, 13.5, 13.2, 13.0, 13.3, 13.4]


#paper bag(65)
#IR_list = [11.7, 11.2, 10.7, 10.2, 9.6, 9.5, 8.8, 8.3, 8.1, 7.9, 8.1, 8.6, 8.8, 9.0, 9.1, 9.4, 9.3, 10.0, 10.5, 10.5, 10.8, 10.7, 10.8, 10.9, 10.9, 10.9, 10.8, 10.8, 11.1, 10.5, 10.6, 10.2, 10.3, 10.0, 9.9, 9.5, 9.1, 9.1, 8.8, 8.5, 8.3, 9.0, 9.1, 9.9, 10.9, 11.0, 11.7, 12.2, 12.5, 13.0, 13.3, 13.7, 14.0, 14.0, 14.1, 14.4, 14.1, 14.4, 14.3, 14.3, 14.5, 14.3, 14.8, 14.9, 14.9, 14.9, 14.8, 14.8, 15.0, 15.2, 15.0, 15.5, 16.0, 15.8, 16.1, 16.2, 16.2, 16.1, 16.6, 17.0, 16.9, 17.3, 17.0, 16.8, 17.2, 17.3, 17.3, 17.4, 17.2, 17.4, 17.4, 17.3, 17.0, 17.5, 17.4, 17.4, 17.4, 17.4, 17.2, 17.0, 17.1, 17.1, 17.2, 17.1, 17.2, 17.4, 17.2, 17.4, 17.6, 17.1, 17.4, 17.4, 17.2, 17.0, 17.0, 16.9, 17.0, 16.7, 16.8, 16.7, 17.0, 16.7, 16.6, 16.6, 16.6, 16.5, 16.4, 16.2, 16.2, 16.3, 16.0, 16.0, 15.6, 15.8, 15.4, 14.8, 15.1, 14.9, 14.3, 14.5, 14.4, 13.6, 13.6, 13.7, 13.1, 13.1, 12.9, 12.8, 12.5, 12.6, 12.8, 13.1, 13.3, 13.3, 13.8, 14.0, 14.2, 14.5, 14.7, 14.7, 14.4, 14.3, 14.7, 14.5, 14.8, 14.9, 15.0, 14.8, 14.5, 14.6, 14.8, 14.6, 14.9, 14.8, 14.8, 14.8, 14.6, 14.5, 14.3, 14.5, 14.2, 14.1, 13.8, 13.6, 13.5, 12.8, 12.3, 12.1, 11.9, 12.0, 12.2, 12.0, 12.2, 12.3, 12.4, 12.7, 13.0, 13.3, 13.5, 13.8, 14.0, 14.4, 14.7, 14.8, 14.9, 15.1, 15.0, 15.2, 15.2, 15.5, 14.8, 15.2, 15.6, 15.7, 15.6, 15.6, 16.0, 15.8, 15.6, 15.6, 16.1, 16.0, 15.8, 16.3, 16.0, 16.1, 16.4, 16.2, 16.3, 16.4, 16.3, 15.8, 16.0, 15.9, 15.8, 15.8, 15.8, 16.0, 16.0, 15.8, 15.7, 15.9, 15.7, 15.3, 15.3, 15.7, 15.4, 15.5, 15.3, 15.6, 15.6, 15.3, 15.6, 15.1, 15.3, 14.9, 14.9, 14.7, 14.7, 14.2, 14.3, 14.1, 14.2, 13.8, 13.6, 13.3, 13.1, 12.8, 12.7, 12.6]
#IR_list = [13.2, 13.2, 13.1, 13.2, 13.1, 13.3, 13.4, 13.1, 13.1, 13.2, 13.3, 13.3, 13.2, 13.1, 13.1, 13.4, 13.1, 13.3, 13.3, 13.0, 13.2, 12.7, 12.8, 12.7, 12.7, 12.7, 12.4, 12.3, 12.1, 12.0, 11.8, 11.6, 11.5, 11.3, 11.1, 11.0, 10.8, 10.7, 10.8, 10.3, 10.1, 10.2, 9.7, 9.2, 9.2, 9.0, 8.2, 7.6, 8.0, 8.1, 8.3, 8.6, 9.2, 9.5, 10.4, 10.4, 10.2, 10.7, 10.8, 11.0, 11.3, 11.2, 11.5, 11.7, 11.7, 12.1, 11.6, 12.1, 11.9, 11.8, 12.0, 11.9, 12.1, 11.8, 11.8, 11.8, 11.7, 11.6, 11.3, 10.9, 11.2, 11.2, 11.2, 11.0, 10.9, 11.0, 11.0, 10.2, 10.4, 10.5, 11.2, 12.1, 12.5, 13.4, 14.2, 15.1, 15.6, 17.1, 16.9, 17.5, 17.8, 18.2, 18.4, 18.5, 18.4, 18.2, 18.8, 18.7, 19.0, 18.7, 18.7, 19.0, 19.3, 18.8, 19.3, 19.0, 19.2, 19.6, 19.5, 19.5, 19.7, 19.8, 20.0, 19.8, 19.7, 20.1, 20.1, 20.3, 20.4, 20.1, 20.4, 20.0, 20.5, 20.5, 20.6, 20.1, 20.5, 20.2, 20.4, 20.4, 20.4, 20.2, 19.9, 20.1, 20.0, 20.4, 20.1, 20.4, 20.3, 20.3, 20.2, 20.3, 20.2, 20.1, 20.3, 20.5, 20.4, 20.1, 20.2, 20.3, 20.4, 20.6, 20.2, 20.2, 20.0, 20.0, 20.2, 20.1, 20.1, 19.9, 20.1, 19.9, 19.9, 20.1, 19.9, 19.8, 19.9, 20.0, 19.7, 19.8, 20.1, 19.5, 19.4, 19.7, 19.8, 19.6, 19.5, 19.5, 19.6, 19.4, 19.5, 19.2, 19.1, 19.0, 18.8, 18.9, 18.9, 18.6, 18.6, 18.3, 18.1, 17.9, 17.5, 17.8, 17.6, 17.4, 17.4, 17.3, 17.1, 16.7, 16.5, 16.4, 16.0, 16.0, 15.1, 14.9, 14.7, 14.2, 13.4, 13.0, 12.8, 12.1, 11.7, 11.6, 11.6, 11.8, 11.9, 11.8, 12.4, 12.4, 12.6, 12.8, 12.7, 13.2, 12.8, 13.1, 13.2, 13.1, 12.9, 13.1, 12.9, 12.9, 12.8, 12.7, 12.8, 12.7, 12.6, 12.3, 12.2, 11.6, 11.1, 10.9, 10.5, 9.6, 9.0, 8.8, 9.1, 9.1, 9.7, 9.8, 10.4, 10.6, 10.7, 11.2, 11.2, 11.4, 11.5, 11.8, 12.1, 11.9]
#IR_list = [16.5, 16.4, 16.3, 16.2, 16.4, 16.6, 16.8, 16.5, 16.4, 16.2, 16.4, 16.2, 16.2, 15.9, 16.1, 15.8, 15.9, 15.7, 15.6, 15.4, 15.5, 15.8, 15.2, 15.5, 15.1, 14.8, 14.8, 14.8, 14.5, 14.5, 14.4, 14.2, 14.1, 13.9, 13.6, 13.4, 13.1, 12.6, 12.6, 11.8, 11.7, 11.3, 11.1, 11.1, 11.0, 10.8, 10.9, 10.7, 10.5, 10.6, 10.3, 10.3, 10.3, 10.6, 10.4, 10.9, 10.6, 11.0, 11.1, 11.5, 11.8, 11.8, 12.2, 12.2, 12.3, 12.7, 12.3, 12.4, 12.2, 12.1, 12.4, 12.5, 12.5, 12.5, 12.4, 12.5, 12.5, 12.3, 12.6, 12.6, 12.2, 12.3, 12.1, 11.9, 11.8, 11.5, 11.4, 11.3, 11.1, 11.0, 10.8, 10.6, 10.0, 9.9, 10.3, 10.8, 10.8, 11.4, 11.9, 11.9, 12.2, 13.0, 13.2, 13.3, 13.4, 13.7, 14.0, 14.3, 14.4, 14.7, 15.0, 15.3, 15.5, 15.5, 15.7, 15.6, 16.2, 15.8, 16.2, 16.3, 16.2, 16.9, 16.3, 16.3, 16.4, 16.3, 16.6, 16.4, 16.6, 16.5, 16.5, 16.6, 16.6, 16.9, 16.6, 16.6, 16.7, 16.6, 16.6, 16.5, 16.6, 16.5, 16.7, 16.7, 16.4, 16.4, 16.5, 16.6, 16.5, 16.6, 16.5, 16.3, 16.1, 15.9, 16.3, 16.0, 15.8, 16.0, 15.7, 15.7, 16.0, 15.8, 15.7, 15.7, 15.6, 15.0, 15.0, 14.8, 14.9, 14.6, 14.6, 14.3, 13.9, 13.9, 13.6, 13.5, 13.2, 12.8, 12.4, 12.4, 11.8, 11.9, 11.4, 10.7, 10.8, 10.8, 10.9, 11.0, 11.2, 11.3, 11.4, 11.8, 12.0, 12.6, 12.8, 12.8, 13.1, 13.2, 13.5, 13.1, 13.3, 13.1, 13.1, 13.1, 13.4, 13.4, 13.3, 13.3, 13.0, 13.0, 13.1, 12.5, 12.5, 11.9, 11.9, 12.0, 11.2, 11.0, 10.6, 10.4, 10.2, 9.7, 10.1, 10.2, 11.0, 11.3, 11.8, 12.0, 12.5, 13.3, 13.3, 13.8, 14.1, 14.5, 14.4, 14.9, 14.9, 14.7, 15.4, 15.3, 15.1, 15.9, 15.8, 16.0, 15.8, 15.9, 16.1, 16.0, 16.0, 15.8, 16.4, 16.3, 16.4, 16.9, 16.6, 16.8, 16.5, 16.7, 16.8, 16.8, 16.8, 16.8, 16.8, 16.6, 16.8, 16.8, 16.8, 16.5, 16.3, 16.9]
#snacke bags(52)
IR_list = [20.2, 20.3, 20.5, 19.9, 20.3, 20.2, 20.0, 20.3, 20.1, 20.0, 20.0, 20.4, 19.9, 20.4, 20.1, 20.2, 20.2, 20.0, 19.6, 19.7, 20.0, 19.6, 19.7, 19.5, 19.3, 19.3, 19.4, 19.7, 19.4, 19.6, 19.6, 19.3, 19.6, 19.4, 19.6, 19.6, 19.6, 19.1, 19.1, 19.1, 19.0, 18.4, 18.4, 18.4, 17.9, 18.4, 17.9, 17.7, 17.5, 17.3, 16.9, 17.1, 16.8, 16.6, 16.5, 16.2, 15.9, 15.8, 15.8, 15.3, 15.6, 15.7, 15.0, 14.4, 14.0, 13.7, 13.8, 13.4, 13.6, 13.4, 13.4, 13.2, 13.1, 12.7, 12.9, 12.9, 13.0, 13.1, 13.3, 12.4, 12.2, 11.7, 11.6, 11.8, 11.5, 11.7, 12.0, 11.6, 12.0, 11.9, 12.3, 12.3, 12.4, 12.8, 12.7, 13.0, 12.8, 13.2, 13.3, 13.8, 14.1, 14.5, 14.1, 14.6, 14.7, 14.9, 14.8, 15.3, 15.4, 15.6, 15.4, 15.5, 15.5, 15.8, 16.1, 16.0, 15.8, 15.9, 15.9, 16.0, 16.0, 16.4, 16.3, 16.4, 16.6, 16.3, 16.5, 16.7, 17.0, 17.0, 16.5, 17.2, 17.3, 17.3, 17.4, 16.8, 16.4, 16.1, 16.2, 16.0, 15.8, 16.0, 16.0, 16.3, 16.3, 16.5, 16.7, 17.0, 16.8, 17.0, 17.1, 17.2, 17.3, 17.3, 17.2, 16.6, 17.2, 16.9, 15.9, 16.0, 16.1, 15.6, 14.9, 15.5, 15.2, 15.3, 17.2, 17.6, 17.9, 17.2, 17.1, 16.9, 16.8, 16.8, 17.0, 16.9, 16.6, 17.1, 16.6, 16.8, 16.3, 16.3, 16.3, 16.4, 16.3, 15.9, 15.7, 15.8, 16.0, 15.4, 15.4, 14.8, 14.8, 14.5, 14.3, 13.8, 13.3, 13.1, 13.0, 13.1, 12.6, 12.2, 11.8, 12.0, 11.8, 11.5, 11.8, 12.1, 12.5, 12.7, 12.8, 13.4, 13.5, 13.7, 14.3, 14.5, 14.3, 15.0, 15.5, 15.7, 16.3, 16.4, 17.2, 17.1, 17.2, 17.0, 17.4, 17.8, 17.8, 18.4, 18.1, 18.4, 18.4, 18.7, 18.7, 18.8, 18.7, 19.3, 19.0, 19.2, 19.1, 19.4, 19.2, 19.7, 19.6, 19.9, 19.6, 19.8, 19.7, 20.0, 20.1, 19.8, 19.9, 19.6, 19.8, 19.6, 19.6, 19.6, 19.8, 19.4, 19.5, 19.7, 19.6, 19.6, 19.5, 19.4, 19.3, 19.4, 19.4, 19.6]
IR_list = [19.6, 19.5, 19.6, 19.4, 19.0, 19.3, 19.1, 18.7, 18.3, 18.4, 18.3, 18.1, 17.9, 17.6, 17.6, 17.3, 17.2, 16.5, 16.5, 16.4, 16.1, 15.6, 15.4, 15.7, 15.5, 15.0, 15.3, 15.9, 14.5, 14.3, 13.9, 13.8, 13.7, 13.5, 13.4, 13.3, 13.1, 13.1, 13.0, 13.0, 13.0, 12.7, 12.7, 12.7, 12.5, 11.9, 11.8, 11.7, 11.7, 11.4, 11.8, 12.0, 12.1, 11.9, 12.1, 11.7, 12.4, 12.5, 12.2, 12.7, 12.6, 13.1, 13.2, 13.6, 13.8, 14.0, 14.2, 14.1, 14.4, 14.4, 14.9, 15.2, 15.3, 15.1, 15.5, 15.4, 15.6, 16.1, 15.9, 16.0, 15.8, 15.8, 16.0, 16.2, 16.5, 16.2, 16.2, 16.5, 16.4, 16.3, 16.2, 16.3, 16.5, 16.6, 16.9, 16.6, 16.7, 16.9, 17.6, 17.6, 17.2, 17.0, 16.8, 16.1, 16.0, 15.8, 15.4, 15.5, 15.9, 16.3, 16.1, 16.5, 16.8, 17.3, 16.8, 17.1, 16.8, 17.2, 17.1, 17.3, 17.1, 17.2, 17.2, 16.9, 17.2, 16.6, 16.5, 16.0, 16.6, 16.0, 15.8, 15.2, 15.7, 15.8, 17.7, 18.2, 17.1, 17.0, 17.1, 16.9, 16.5, 16.4, 16.6, 16.6, 16.6, 16.6, 16.4, 16.5, 16.5, 16.5, 16.4, 16.0, 16.2, 16.1, 15.9, 15.5, 15.5, 15.2, 15.0, 14.8, 14.5, 14.7, 13.7, 13.5, 13.4, 12.9, 12.6, 12.6, 12.4, 12.3, 12.0, 11.6, 11.1, 11.7, 12.2, 12.2, 12.5, 12.7, 13.4, 13.9, 13.8, 14.0, 14.1, 14.4, 14.8, 14.9, 15.4, 15.3, 16.0, 15.9, 16.6, 17.2, 17.4, 17.5, 18.1, 18.0, 18.1, 18.3, 18.3, 18.3, 18.8, 18.5, 18.7, 19.1, 18.8, 19.0, 19.3, 19.2, 19.5, 19.5, 19.3, 19.5, 19.6, 19.4, 19.9, 19.5, 19.7, 19.9, 19.5, 19.7, 19.7, 20.1, 19.7, 19.8, 19.7, 19.5, 19.5, 19.4, 19.6, 19.1, 19.3, 19.5, 19.5, 19.4, 19.4, 19.4, 19.5, 19.6, 19.6, 19.8, 19.9, 19.8, 19.3, 20.0, 19.8, 20.0, 20.5, 20.3, 20.0, 20.2, 19.8, 20.0, 19.9, 19.5, 19.3, 19.8, 19.7, 19.6, 19.7, 19.5, 19.6, 19.4, 19.5, 19.3, 19.3, 19.0, 19.2, 18.9, 19.0, 19.6]

#leg(ankle)
#IR_list = [24.2, 24.8, 24.5, 24.7, 25.3, 25.5, 25.7, 25.8, 25.4, 25.3, 25.3, 25.3, 24.7, 24.5, 24.6, 24.0, 23.8, 23.8, 23.4, 23.6, 23.3, 22.9, 23.5, 23.1, 23.4, 23.2, 23.3, 23.2, 23.2, 22.9, 22.6, 23.8, 23.0, 23.2, 23.2, 22.7, 23.3, 22.9, 22.8, 23.0, 23.0, 22.9, 23.0, 22.9, 22.6, 22.9, 22.6, 22.5, 22.7, 22.8, 22.8, 22.5, 22.3, 22.3, 22.4, 22.3, 22.3, 21.9, 22.3, 22.4, 22.5, 21.8, 22.1, 21.9, 22.5, 22.3, 22.2, 22.3, 22.0, 22.1, 22.6, 22.8, 22.2, 22.4, 22.4, 22.3, 22.1, 22.3, 22.3, 22.1, 22.1, 21.9, 21.8, 22.2, 22.2, 21.9, 22.1, 22.1, 21.7, 22.1, 21.6, 21.6, 21.8, 21.7, 21.6, 21.2, 21.5, 21.4, 21.5, 21.2, 21.7, 21.5, 21.6, 21.3, 21.7, 20.8, 21.7, 20.9, 21.4, 21.0, 21.0, 20.7, 21.0, 20.6, 20.7, 20.6, 20.4, 20.8, 20.2, 20.2, 20.5, 20.3, 20.6, 20.1, 19.9, 19.9, 19.7, 20.4, 20.0, 19.9, 19.7, 19.5, 20.0, 19.9, 20.0, 19.3, 19.5, 19.3, 18.9, 18.9, 18.6, 19.0, 18.9, 18.7, 18.2, 18.3, 17.9, 18.0, 17.7, 17.7, 17.3, 17.7, 17.6, 17.4, 17.2, 16.9, 16.9, 16.7, 16.4, 16.3, 16.1, 16.5, 15.9, 16.2, 15.8, 15.8, 15.6, 15.6, 15.3, 15.2, 14.9, 15.0, 14.8, 14.5, 14.3, 14.3, 14.5, 13.9, 13.8, 13.5, 13.8, 13.6, 13.4, 13.5, 13.4, 13.5, 13.3, 13.3, 13.4, 13.5, 13.5, 13.7, 13.8, 13.8, 14.3, 14.3, 14.6, 14.8, 15.1, 16.1, 15.8, 15.9, 16.0, 16.2, 16.4, 16.9, 17.0, 16.9, 17.2, 18.1, 19.0, 19.4, 20.7, 21.0, 21.7, 22.0, 23.1, 22.6, 22.4, 22.3, 22.3, 21.7, 21.4, 21.1, 21.4, 21.8, 22.3, 23.4, 23.5, 24.9, 25.1, 26.9, 28.0, 29.0, 29.8, 30.4, 30.9, 30.5, 30.9, 30.7, 30.4, 30.0, 30.1, 29.7, 28.3, 27.6, 27.1, 26.7, 26.2, 25.5, 25.3, 24.8, 24.0, 24.1, 23.9, 23.7, 23.9, 24.4, 24.0, 25.0, 24.5, 24.4, 24.1, 24.0, 23.9, 24.1, 24.3, 24.3, 24.0, 24.0] #bad
IR_list = [19.7, 19.7, 19.7, 19.8, 19.9, 19.6, 19.7, 19.6, 19.3, 19.8, 19.7, 19.7, 19.7, 19.6, 19.9, 19.5, 19.8, 19.6, 19.9, 19.7, 19.8, 19.8, 19.6, 19.8, 19.4, 19.3, 19.4, 19.4, 19.4, 19.2, 19.2, 19.3, 19.2, 19.5, 19.3, 19.1, 19.3, 19.3, 19.0, 19.4, 19.4, 19.2, 19.2, 19.1, 18.9, 18.7, 18.9, 18.5, 18.6, 18.5, 18.5, 18.8, 18.7, 18.4, 18.6, 18.6, 18.2, 18.2, 18.4, 18.0, 18.6, 18.7, 18.2, 18.6, 18.0, 18.4, 17.9, 17.8, 18.0, 18.1, 18.0, 18.0, 18.0, 17.9, 17.9, 18.1, 17.9, 18.1, 17.7, 18.1, 18.1, 18.0, 18.3, 18.2, 18.2, 18.4, 18.2, 18.6, 18.6, 18.3, 18.7, 18.6, 18.8, 18.4, 18.3, 18.4, 18.5, 18.6, 18.8, 18.5, 18.8, 18.6, 18.6, 18.9, 18.7, 18.8, 19.2, 19.3, 19.0, 19.2, 18.9, 19.4, 19.7, 19.5, 19.5, 19.6, 19.7, 19.6, 19.5, 19.8, 19.4, 19.4, 19.4, 19.6, 19.7, 19.5, 19.6, 19.4, 19.6, 19.7, 19.6, 19.5, 19.5, 19.4, 19.8, 19.8, 19.8, 19.7, 19.8, 19.9, 19.6, 19.7, 19.5, 19.3, 19.6, 19.6, 19.7, 19.6, 19.5, 19.8, 19.5, 19.6, 19.6, 19.4, 19.1, 20.0, 19.5, 19.2, 19.5, 19.5, 19.3, 19.5, 19.5, 19.4, 19.5, 19.4, 19.4, 19.0, 19.1, 19.1, 18.7, 18.9, 19.2, 18.9, 19.0, 18.8, 18.8, 18.5, 18.7, 19.0, 18.6, 18.8, 18.6, 18.7, 19.0, 18.4, 18.9, 18.5, 19.0, 18.8, 18.6, 18.6, 18.5, 18.7, 18.5, 18.4, 18.7, 18.7, 18.6, 18.6, 18.4, 18.7, 18.6, 18.8, 18.5, 18.4, 18.9, 18.6, 19.0, 19.1, 19.0, 19.4, 19.2, 19.1, 19.4, 19.7, 19.8, 19.9, 20.0, 19.7, 20.0, 19.5, 19.5, 20.0, 19.7, 19.9, 19.6, 19.5, 19.3, 19.4, 19.6, 19.6, 19.8, 20.1, 20.4, 20.2, 20.5, 20.3, 20.4, 20.5, 20.3, 20.3, 20.3, 19.8, 20.3, 20.0, 20.1, 20.0, 19.9, 19.9, 20.0, 20.0, 19.9, 20.0, 19.9, 19.8, 20.0, 20.0, 19.9, 20.1, 20.2, 19.8, 19.8, 20.1, 19.9, 20.3, 19.8, 20.3, 20.2, 20.5]
#IR_list = [19.5, 19.3, 19.4, 19.6, 19.3, 19.2, 19.2, 18.9, 18.8, 19.2, 18.8, 18.8, 18.8, 19.2, 19.0, 18.9, 18.8, 19.0, 19.2, 18.7, 18.5, 18.6, 18.8, 19.0, 18.9, 18.6, 18.6, 18.8, 19.0, 18.9, 18.6, 18.7, 18.6, 18.7, 18.7, 18.4, 18.8, 18.8, 18.3, 18.6, 18.6, 18.5, 18.9, 18.8, 18.8, 18.4, 18.3, 18.7, 18.5, 18.7, 18.8, 18.8, 18.8, 18.5, 18.5, 18.8, 18.6, 18.8, 18.4, 18.5, 18.7, 18.8, 18.8, 18.4, 18.7, 18.7, 18.5, 18.8, 18.6, 18.7, 18.6, 18.8, 19.1, 19.1, 19.3, 19.1, 19.5, 19.6, 19.4, 19.7, 19.4, 19.5, 20.0, 19.5, 19.7, 20.1, 19.8, 20.5, 20.3, 19.7, 19.7, 19.8, 20.1, 20.1, 20.3, 20.4, 20.1, 20.8, 20.7, 21.0, 21.2, 20.5, 21.0, 20.8, 21.2, 20.7, 20.6, 20.9, 20.7, 21.0, 20.6, 21.1, 21.0, 21.4, 21.3, 21.1, 21.0, 20.7, 20.8, 21.0, 21.3, 21.1, 21.3, 21.1, 21.2, 20.9, 21.4, 21.1, 20.8, 21.2, 21.0, 20.9, 21.0, 21.3, 20.8, 21.0, 21.0, 21.1, 21.0, 21.3, 21.0, 20.9, 21.1, 21.2, 20.9, 21.1, 21.0, 21.4, 21.2, 21.1, 20.8, 20.9, 20.7, 20.6, 21.0, 20.2, 20.5, 21.0, 20.5, 20.2, 20.6, 20.1, 20.3, 20.4, 20.3, 20.0, 20.4, 20.1, 19.8, 20.0, 20.0, 20.0, 19.7, 19.8, 19.5, 19.9, 19.6, 19.4, 19.1, 19.0, 19.3, 19.0, 18.9, 18.9, 18.8, 18.7, 18.8, 18.8, 18.5, 18.5, 18.3, 18.3, 18.1, 17.6, 18.3, 18.0, 17.9, 17.8, 18.3, 17.9, 17.6, 17.8, 17.7, 17.7, 17.7, 17.5, 17.5, 18.0, 17.8, 17.7, 17.6, 17.8, 18.0, 18.0, 17.8, 17.6, 17.8, 17.6, 17.4, 16.9, 17.2, 17.3, 17.3, 17.3, 17.5, 17.2, 17.3, 17.4, 17.3, 17.7, 17.8, 17.5, 17.6, 17.6, 17.4, 17.6, 17.9, 17.9, 17.7, 18.0, 18.0, 18.0, 17.7, 17.9, 17.9, 17.8, 18.1, 17.9, 17.9, 17.9, 18.1, 18.2, 18.2, 18.4, 18.3, 18.3, 18.4, 18.1, 18.0, 18.9, 18.5, 18.3, 18.5, 18.5, 18.5, 18.6, 18.4, 18.1, 18.2, 18.3]
#IR_list = [18.7, 18.7, 18.7, 18.6, 18.6, 18.8, 19.1, 18.7, 18.5, 18.7, 18.5, 18.6, 18.8, 18.8, 18.8, 19.0, 18.7, 18.8, 18.6, 19.0, 18.5, 18.8, 18.6, 18.7, 18.5, 18.4, 18.0, 18.4, 18.4, 18.8, 18.8, 19.0, 19.1, 19.4, 18.9, 19.2, 18.8, 18.8, 18.8, 19.0, 18.8, 18.8, 18.8, 18.5, 18.9, 18.6, 18.8, 18.8, 18.6, 18.6, 18.9, 18.8, 18.9, 19.2, 19.1, 19.2, 18.8, 19.2, 18.8, 19.3, 18.7, 19.1, 19.3, 19.4, 19.6, 19.5, 19.5, 19.7, 20.0, 19.5, 19.6, 19.6, 19.5, 19.9, 20.1, 19.7, 19.7, 19.9, 19.9, 20.4, 20.2, 20.5, 20.2, 20.4, 20.2, 20.7, 20.5, 21.0, 20.6, 20.6, 21.0, 20.8, 20.7, 20.8, 20.7, 20.9, 21.2, 20.9, 20.9, 20.8, 21.2, 21.1, 21.4, 21.0, 21.4, 21.1, 21.2, 21.2, 21.4, 20.9, 21.2, 21.4, 21.7, 21.6, 21.6, 21.1, 21.4, 21.1, 21.3, 21.5, 21.2, 21.3, 21.5, 21.6, 21.6, 21.4, 21.6, 21.1, 21.3, 21.3, 21.4, 21.5, 21.2, 21.3, 21.7, 21.3, 21.8, 21.8, 21.4, 21.4, 21.8, 20.9, 21.2, 21.4, 21.2, 21.2, 21.2, 21.3, 20.9, 21.2, 21.2, 21.0, 21.1, 21.2, 20.8, 21.0, 20.9, 20.8, 21.0, 21.1, 21.2, 20.6, 21.0, 20.9, 20.6, 20.6, 20.1, 20.3, 20.3, 20.4, 20.1, 19.9, 19.9, 19.8, 20.0, 20.4, 19.8, 19.6, 19.6, 19.8, 19.7, 19.7, 19.7, 19.3, 19.2, 19.3, 19.3, 19.1, 19.0, 19.2, 19.4, 18.5, 19.1, 18.5, 18.5, 18.3, 17.9, 17.9, 18.0, 17.8, 18.0, 18.0, 17.4, 17.5, 18.0, 17.7, 17.6, 17.8, 17.6, 17.5, 18.0, 17.3, 17.6, 17.2, 17.8, 17.4, 17.4, 17.2, 17.8, 17.8, 17.5, 17.7, 17.2, 18.0, 18.0, 18.3, 18.2, 18.0, 18.0, 18.2, 18.0, 18.1, 18.1, 18.1, 18.2, 18.1, 18.5, 18.3, 18.9, 19.1, 19.0, 19.1, 19.1, 19.2, 19.2, 19.0, 18.8, 19.0, 18.8, 18.6, 18.6, 19.6, 19.3, 18.5, 18.9, 19.0, 18.9, 19.0, 19.1, 19.0, 19.0, 19.1, 19.0, 19.0, 19.0, 18.9, 19.2, 19.1, 18.9, 19.5]
'''

#IR_list1 = [19.1, 19.0, 19.1, 18.9, 18.5, 18.7, 18.4, 18.4, 18.4, 18.4, 18.5, 18.3, 18.4, 18.6, 18.5, 18.2, 18.8, 18.5, 18.6, 18.7, 18.3, 18.3, 18.5, 18.6, 18.8, 18.5, 18.7, 18.5, 18.6, 18.6, 18.4, 18.9, 18.7, 18.8, 19.1, 18.7, 18.7, 19.1, 19.1, 19.0, 19.0, 18.9, 19.2, 19.2, 19.2, 19.4, 19.5, 19.2, 19.6, 19.4, 19.4, 19.6, 19.6, 19.6, 19.5, 19.4, 19.7, 19.2, 19.6, 19.6, 19.3, 19.7, 19.4, 19.6, 19.4, 19.6, 19.8, 19.6, 19.9, 19.6, 19.6, 19.4, 19.7, 19.5, 19.4, 19.6, 19.4, 19.3, 19.6, 19.6, 19.5, 19.2, 19.2, 19.5, 19.4, 19.5, 19.1, 18.9, 19.4, 19.5]

def remove_outliers(data, threshold=2):
    mean = np.mean(data)
    std_dev = np.std(data)
    return [x if abs(x - mean) <= threshold * std_dev else mean for x in data]

def generate_leg_image2(IR_list, patient_id):
    # 移除異常值
    filtered_data = remove_outliers(IR_list, threshold=2)

    # 使用高斯濾波平滑數據
    smoothed_data = gaussian_filter1d(filtered_data, sigma=3)

    # 插值增強數據點數量
    num_points = 270  # 目標插值後的數據點數量
    x_original = np.linspace(0, 1, len(smoothed_data))
    x_interp = np.linspace(0, 1, num_points)
    interpolator = interp1d(x_original, smoothed_data, kind="cubic")
    interpolated_data = interpolator(x_interp)
    """根據 IR_list 生成腳部影像並儲存為 PNG"""
    pg.init()
    pg.display.set_mode((900, 600), pg.HIDDEN)
    screen = pg.Surface((900, 600))
    btn_font = pg.font.Font("./font/BAHNSCHRIFT.ttf", 16)

    r = 245  # 半徑，確保為浮點數
    transform_rate = 10.0  # 轉換比例，確保為浮點數
    valid_points = [(i, float(value)) for i, value in enumerate(interpolated_data) if value not in [0, None]]

    # 重新計算有效點的數量和角度
    num_valid_points = len(valid_points)
    if num_valid_points < 3:
        print("有效點數不足，無法生成圖像。")
        return None
    angle = 360.0 / num_valid_points  # 每個點的角度間隔，使用浮點數
    points = []
    leg_len = []

    current_time = dt.now().strftime("%Y%m%d%H%M")

    # 計算每個點的座標
    for i, value in valid_points:
        actual_len = r - value * transform_rate
        leg_y = actual_len * math.sin(math.radians(i * angle))
        leg_x = actual_len * math.cos(math.radians(i * angle))
        point = (450.0 - leg_y * 0.7, 300.0 - leg_x * 0.7)
        leg_len.append(actual_len)
        points.append(point)
        
    def calculate_area_and_perimeter(points):
        n = len(points)
        area = 0
        perimeter = 0
        max_length = 0
        min_length = float('inf')
        max_points = (points[0], points[1])
        min_points = (points[0], points[1])

        for i in range(n):
            x1, y1 = points[i]
            x2, y2 = points[(i + 1) % n]
            len_1 = leg_len[i]
            len_2 = leg_len[(i + 1) % n]
            area += (0.5 * math.sin(math.radians(angle)) * len_1 * len_2)
            perimeter += math.hypot(x2 - x1, y2 - y1)#math.sqrt(len_1 ** 2 + len_2 ** 2 - 2 * len_1 * len_2 * math.cos(math.radians(angle)))
           
           # print(i,((i + 1) % n),perimeter,area)
            
            if leg_len[i] > max_length:
                max_length = leg_len[i]
                max_points = (x1, y1)

            if leg_len[i] < min_length:
                min_length = leg_len[i]
                min_points = (x1, y1)
            
        return area, perimeter, max_points, max_length / transform_rate, min_points, min_length / transform_rate
    leg_area, leg_size, max_line_points, max_len, min_line_points, min_len = calculate_area_and_perimeter(points)
    real_time = time.ctime(time.time())

    # 繪製畫面
    screen.fill((255, 255, 255))
    pg.draw.line(screen, (200, 200, 200), (150, 300), (750, 300), 3)
    pg.draw.line(screen, (200, 200, 200), (450, 50), (450, 550), 3)

    screen.blit(btn_font.render(f"User ID : {patient_id}", True, (70, 70, 70)), (50, 50))
    screen.blit(btn_font.render(f"Measurement time : {real_time}", True, (70, 70, 70)), (50, 80))
    screen.blit(btn_font.render(f"Measured rotation angle: {angle:.1f} degree", True, (70, 70, 70)), (50, 110))
    screen.blit(btn_font.render(f"Ankle area : {round(leg_area / (transform_rate ** 2), 2)} cm^2", True, (70, 70, 70)), (50, 140))
    screen.blit(btn_font.render(f"Ankle circumference : {round(leg_size / transform_rate, 2)} cm", True, (70, 70, 70)), (50, 170))
    pg.draw.rect(screen, (30,78,119), [50, 210, 20, 10], 0)
    screen.blit(btn_font.render("Maximum length", True, (70,70,70)), (80, 205))
    pg.draw.rect(screen, (255,0,0), [50, 240, 20, 10], 0)
    screen.blit(btn_font.render("Minimum length", True, (70,70,70)), (80, 235))

    if len(points) > 2:
        pg.draw.polygon(screen, (255, 200, 200), points, 0)
        pg.draw.polygon(screen, (150, 150, 150), points, 1)
    
    pg.draw.line(screen, (70, 70, 70), (450, 300), max_line_points, 2)
    screen.blit(btn_font.render(f"Max:{round(max_len,1)}", True, (70, 70, 70)),
                ((450 + max_line_points[0]) // 2 - 30, (300 + max_line_points[1]) // 2 - 30))
    pg.draw.line(screen, (255,0,0), (450, 300), min_line_points, 2)
    screen.blit(btn_font.render(f"Min:{round(min_len,1)}", True, (80,80,80)), 
                ((450 + min_line_points[0]) // 2 - 40, (300 + min_line_points[1]) // 2 - 40))

    # 儲存 PNG 圖片，根據病患 ID 命名
    image_path = f"./photo/{current_time}_patient_{patient_id}.png"
    pg.image.save(screen, image_path)
    print(f"Screenshot saved as {image_path}!")

    pg.quit()
    return image_path , leg_area, leg_size



#generate_leg_image2(IR_list,"003")

 
